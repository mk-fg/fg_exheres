# Copyright 2011 Wulf C. Krueger <philantrop@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'squid-3.0.9.ebuild' from Gentoo, which is:
#	 Copyright 1999-2008 Gentoo Foundation

require pam autotools [ supported_autoconf=[ 2.5 ] supported_automake=[ 1.10 ] ] systemd-service

export_exlib_phases src_prepare src_configure src_test src_install

PMAJOR=$(ever major)
PMINOR=$(ever range 2)
PPLEVL=$(ever range 3)
PDEVLV=$(ever range 4)
if ever at_least 3.1; then
	MY_PNV=${PN}-${PMAJOR}.${PMINOR}.${PPLEVL}
elif [[ -n ${PDEVLV} ]]; then
	MY_PNV=${PN}-${PMAJOR}.${PMINOR}.${PPLEVL}.${PDEVLV}
else
	MY_PNV=${PN}-${PMAJOR}.${PMINOR}.STABLE${PPLEVL}
fi

SUMMARY="Squid is a full-featured, high performance web proxy cache"
DESCRIPTION="
Squid is a fully-featured HTTP/1.0 proxy which is almost HTTP/1.1 compliant. Squid
offers a rich access control, authorization and logging environment to develop web
proxy and content serving applications.
"
HOMEPAGE="http://www.${PN}-cache.org/"
DOWNLOADS="http://www.${PN}-cache.org/Versions/v${PMAJOR}/${PMAJOR}.${PMINOR}/${MY_PNV}.tar.bz2"

BUGS_TO=""
REMOTE_IDS="freshmeat:${PN}"

UPSTREAM_RELEASE_NOTES="http://www.${PN}-cache.org/Versions/v${PMAJOR}/${PMAJOR}.${PMINOR}/RELEASENOTES.html"
UPSTREAM_CHANGELOG="http://www.${PN}-cache.org/Versions/v${PMAJOR}/${PMAJOR}.${PMINOR}/changesets/SQUID_${PMAJOR}_${PMINOR}_STABLE${PPLEVL}.html"
UPSTREAM_DOCUMENTATION="http://www.${PN}-cache.org/Doc/ [[ lang = en ]]"

LICENCES="GPL-2"
SLOT="0"

MYOPTIONS="
	baselayout
	caps [[ description = [ Support for Linux capabilities. ] ]]
	icap-client [[ description = [ ICAP is used to integrate with 3rd party products like malicious content scanners, URL filters, etc. ] ]]
	ldap [[ description = [ Support LDAP-based authentication. ] ]]
	logrotate [[ description = [ Adds support for log rotation. ] ]]
	mysql [[ description = [ Support MySQL-based authentication. ] ]]
	nis pam radius sasl snmp ssl threads"
# Since logrotation here has more implications than just cp'ing a file, I'll keep it as a flag.
# Further possible auth backends: postgres, sqlite, samba

DEPENDENCIES="
	build+run:
		sys-libs/db:=[>=4]
		caps? ( sys-libs/libcap[>=2.19] )
		ldap? ( net-directory/openldap )
		logrotate? ( app-admin/logrotate )
		mysql? ( dev-db/mysql )
		pam? ( sys-libs/pam )
		sasl? ( net-libs/cyrus-sasl )
		ssl? ( dev-libs/openssl )
		group/squid
		user/squid
	test:
		dev-cpp/cppunit[>=1.12.1]
"

DEFAULT_SRC_INSTALL_EXTRA_DOCS=(
	QUICKSTART
	SPONSORS
)

WORK="${WORKBASE}/${MY_PNV}"

squid_src_prepare() {
	default

	# Removing the -Werror madness.
	edo sed -i -e 's:-Werror::' acinclude.m4

	# -fhuge-objects is not needed and not supported by gcc-4.4 anymore.
	edo sed -i -e 's:\(HUGE_OBJECT_FLAG="\)-fhuge-objects":\1":' acinclude.m4

	# eautoreconf breaks the libtool crap.
	edo ./bootstrap.sh
}

squid_src_configure() {
	local basic_modules="getpwnam,NCSA,MSNT"
	option ldap   && basic_modules+=",LDAP"
	option mysql  && basic_modules+=",DB"
	option nis	&& basic_modules+=",YP"
	option pam	&& basic_modules+=",PAM"
	option radius && basic_modules+=",squid_radius_auth"
	option sasl   && basic_modules+=",SASL"

	local digest_helpers="password"
	option ldap && digest_helpers+=",ldap"

	local ext_helpers="ip_user,session,unix_group"
	option ldap && ext_helpers+=",ldap_group"

	local ntlm_helpers="fakeauth"

	# Upstream doesn't support --without for these two... *sigh*
	local myconf=""
	option threads && myconf="--with-pthreads --with-aio"

	econf \
		--sysconfdir=/etc/squid \
		--libexecdir=/usr/libexec/squid \
		--localstatedir=/var \
		--datadir=/usr/share/squid \
		--enable-arp-acl \
		--enable-auth="basic,digest,negotiate,ntlm" \
		--enable-basic-auth-helpers="${basic_modules}" \
		--enable-cache-digests \
		--enable-delay-pools \
		--enable-digest-auth-helpers="${digest_helpers}" \
		--enable-disk-io="AIO,Blocking,DiskDaemon,DiskThreads" \
		--enable-external-acl-helpers="${ext_helpers}" \
		--enable-follow-x-forwarded-for \
		--enable-forw-via-db \
		--enable-htcp \
		--enable-icmp \
		--enable-ipv6 \
		--enable-linux-netfilter \
		--enable-ntlm-auth-helpers="${ntlm_helpers}" \
		--enable-referer-log \
		--enable-removal-policies="lru,heap" \
		--enable-shared \
		--enable-storeio="ufs,diskd,aufs" \
		--enable-useragent-log \
		--enable-wccp \
		--enable-wccpv2 \
		--disable-ecap \
		--disable-kqueue \
		--with-default-user=squid \
		--with-dl \
		--with-filedescriptors=8192 \
		--with-large-files \
		--with-logdir=/var/log/squid \
		--with-pidfile=/var/run/squid.pid \
		$(option_enable caps) \
		$(option_enable icap-client) \
		$(option_enable snmp) \
		$(option_enable ssl) \
		${myconf}
}

squid_src_test() {
	# The header tests are partly broken due to missing includes. Figure them out
	# if you care. We can't do this in src_prepare because the bootstrap thingy
	# fails to work properly and eautoreconf breaks things.
	edo sed -i -e '/TESTS = /s:testHeaders::' src/Makefile

	default
}

squid_src_install() {
	default

	if option baselayout ; then
		hereconfd squid <<EOF
# switches for squid
SQUID_OPTS="-DYC"

# Max. number of filedescriptors to use. You can increase this on a busy
# cache to a maximum of (currently) 8192 filedescriptors. Default is 1024.
SQUID_MAXFD=1024
EOF
	fi

	option pam && newpamd "${FILES}"/squid.pam squid

	# Needs to be suid root for looking into /etc/shadow
	edo chown root:squid "${IMAGE}"/usr/libexec/squid/ncsa_auth
	edo chown root:squid "${IMAGE}"/usr/libexec/squid/pam_auth
	edo chmod 4750 "${IMAGE}"/usr/libexec/squid/ncsa_auth
	edo chmod 4750 "${IMAGE}"/usr/libexec/squid/pam_auth

	if ! ever at_least 3.1; then
		# Remove cruft.
		edo rm "${IMAGE}"/usr/bin/Run*
	fi

	dodoc helpers/basic_auth/SASL/squid_sasl_auth*

	if option baselayout ; then
		if option logrotate ; then
			newinitd "${FILES}"/squid.initd-logrotate squid
			insinto /etc/logrotate.d
			newins "${FILES}"/squid.logrotate squid
		else
			newinitd "${FILES}"/squid.initd squid
			exeinto /etc/cron.weekly
			newexe "${FILES}"/squid.cron squid.cron
		fi
	fi

	install_systemd_files

	if ever at_least 3.1; then
		edo rmdir "${IMAGE}"/usr/include
		edo rmdir "${IMAGE}"/usr/$LIBDIR
	fi
	edo rm -r "${IMAGE}"/var
	diropts -m0755 -o squid -g squid
	keepdir /var/cache/squid /var/log/squid
}

