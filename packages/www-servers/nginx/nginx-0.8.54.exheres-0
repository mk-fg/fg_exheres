# Copyright 2011 Mike Kazantsev
# Copyright 2009 Timothy Redaelli <timothy@redaelli.eu>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'nginx-0.7.43.ebuild' and 'nginx-0.8.54.ebuild', which are:
#  Copyright 1999-20010 Gentoo Foundation

require systemd-service

# http://labs.frickle.com/nginx_ngx_cache_purge/, BSD-2
MOD_CACHE_PURGE_PNV="ngx_cache_purge-1.2"
# http://github.com/agentzh/chunkin-nginx-module/, BSD
MOD_CHUNKIN_PV="0.22rc1"
MOD_CHUNKIN_PNV="chunkin-nginx-module-${MOD_CHUNKIN_PV}"
MOD_CHUNKIN_SHA1="b0a3ee3"
# http://github.com/agentzh/headers-more-nginx-module, BSD
MOD_HEADERS_MORE_PV="0.13"
MOD_HEADERS_MORE_PNV="ngx-http-headers-more-${MOD_HEADERS_MORE_PV}"
MOD_HEADERS_MORE_SHA1="9508330"
# http://pushmodule.slact.net/, MIT
MOD_PUSH_PNV="nginx_http_push_module-0.692"

SUMMARY="A small and fast HTTP server and mail proxy server."
DESCRIPTION=""

HOMEPAGE="http://nginx.net/ http://sysoev.ru/nginx/
    http://labs.frickle.com/nginx_ngx_cache_purge/"
DOWNLOADS="
    http://sysoev.ru/nginx/${PNV}.tar.gz
    chunk? ( http://github.com/agentzh/chunkin-nginx-module/tarball/v${MOD_CHUNKIN_PV}
        -> ${MOD_CHUNKIN_PNV}.tgz )
    nginx_modules:cache_purge? ( http://labs.frickle.com/files/${MOD_CACHE_PURGE_PNV}.tar.gz )
    nginx_modules:headers_more? (
        http://github.com/agentzh/headers-more-nginx-module/tarball/v${MOD_HEADERS_MORE_PV}
        -> ${MOD_HEADERS_MORE_PNV}.tar.gz )
    nginx_modules:push? ( http://pushmodule.slact.net/downloads/${MOD_PUSH_PNV}.tar.gz )
    pam? ( http://web.iti.upv.es/~sto/nginx/ngx_http_auth_pam_module-1.1.tar.gz )
    rrd? ( http://wiki.nginx.org/images/9/9d/Mod_rrd_graph-0.2.0.tar.gz )
"

LICENCES="
    GPL-2
    nginx_modules:cache_purge? ( BSD-2 [[ note = [ http:cache_purge module ] ]] )
    nginx_modules:headers_more? ( BSD [[ note = [ http:headers_more module ] ]] )
    nginx_modules:push? ( MIT [[ note = [ http:push module ] ]] )
    pam? ( as-is )"
SLOT="0"
PLATFORMS="~amd64 ~x86"

MOD_HTTP_EXC="
    charset gzip ssi userid access auth_basic autoindex geo map split_clients
    referer rewrite proxy fastcgi uwsgi scgi memcached limit_zone limit_req
    empty_gif browser upstream_ip_hash"
MOD_HTTP_INC="
    realip addition xslt image_filter geoip sub dav flv
    gzip_static random_index secure_link degradation stub_status perl"
MOD_HTTP_EXT="push headers_more cache_purge"
MOD_MAIL="mail_imap mail_pop3 mail_smtp"

MYOPTIONS="
    aio baselayout chunk debug pam rrd
    nginx_modules: $MOD_HTTP_INC $MOD_HTTP_EXC $MOD_HTTP_EXT $MOD_MAIL
"

DEPENDENCIES="
    build+run:
        dev-libs/openssl
        dev-libs/pcre
        nginx_modules:geoip? ( net-libs/GeoIP )
        nginx_modules:gzip? ( sys-libs/zlib )
        nginx_modules:gzip_static? ( sys-libs/zlib )
        nginx_modules:image_filter? ( media-libs/gd )
        nginx_modules:perl? ( dev-lang/perl )
        nginx_modules:secure_link? ( dev-libs/openssl )
        nginx_modules:xslt? ( dev-libs/libxml2 dev-libs/libxslt )
        rrd? ( net-analyzer/rrdtool )
"

BUGS_TO="mk.fraggod@gmail.com"
REMOTE_IDS="freshmeat:${PN}"
UPSTREAM_CHANGELOG="http://nginx.net/CHANGES"
UPSTREAM_DOCUMENTATION="http://wiki.nginx.org"


src_unpack() {
    default
    option pam && unpack "ngx_http_auth_pam_module-1.1.tar.gz"
    option rrd && unpack "Mod_rrd_graph-0.2.0.tar.gz"
    option chunk && unpack "${MOD_CHUNKIN_PNV}.tgz"
}

src_prepare() {
    sed -i 's/ make/ \\$(MAKE)/' auto/lib/perl/make
}

src_configure() {
    local conf_params=(
        --prefix=/usr
        --with-cc-opt="-I${ROOT}usr/include"
        --with-ld-opt="-L${ROOT}usr/lib"
        --sbin-path=/usr/sbin/nginx
        --conf-path=/etc/${PN}/nginx.conf
        --error-log-path=/var/log/${PN}/error_log # gets opened before configuration file
        --http-log-path=/var/log/${PN}/access_log
        --with-http_ssl_module # broken w/o it
        --with-pcre )

    # HTTP, cannot be disabled
    for mod in $MOD_HTTP_EXC
    do option nginx_modules:${mod} || conf_params+=( --without-http_${mod}_module )
    done
    for mod in $MOD_HTTP_INC
    do option nginx_modules:${mod} && conf_params+=( --with-http_${mod}_module )
    done

    option nginx_modules:fastcgi && conf_params+=( --with-http_realip_module )
    option nginx_modules:headers_more\
        && conf_params+=(
            "--add-module=${WORKBASE}/agentzh-headers-more-nginx-module-${MOD_HEADERS_MORE_SHA1}" )
    option nginx_modules:push\
        && conf_params+=( "--add-module=${WORKBASE}/${MOD_PUSH_PNV}" )
    option nginx_modules:cache_purge\
        && conf_params+=( "--add-module=${WORKBASE}/${MOD_CACHE_PURGE_PNV}" )

    option aio && conf_params+=( --with-file-aio --with-aio_module )
    option chunk && conf_params+=(
        "--add-module=${WORKBASE}/agentzh-chunkin-nginx-module-${MOD_CHUNKIN_SHA1}" )
    option debug && conf_params+=( --with-debug )
    option rrd && conf_params+=(
        "--add-module=${WORKBASE}/mod_rrd_graph-0.2.0" )
    option pam && conf_params+=(
        "--add-module=${WORKBASE}/ngx_http_auth_pam_module-1.1" )

    # MAIL, can be disabled
    local mail_enabled=
    for mod in $MOD_MAIL; do
        if option nginx_modules:${mod}
        then mail_enabled=true
        else conf_params+=( "--without-${mod}_module" )
        fi
    done
    [[ -n "$mail_enabled" ]] && conf_params+=( --with-mail --with-mail_ssl_module )

    export LANG=C LC_ALL=C # http://bugs.gentoo.org/show_bug.cgi?id=286772
    edo ./configure "${conf_params[@]}"
}

src_compile() {
    export LANG=C LC_ALL=C # http://bugs.gentoo.org/show_bug.cgi?id=286772
    emake CC="${CC}" LD="${CC}" LINK="${CC} ${LDFLAGS}" OTHERLDFLAGS="${LDFLAGS}"
}

src_install() {
    dosbin objs/nginx
    option baselayout && newinitd "${FILES}"/nginx.initd nginx

    insinto /etc/nginx
    doins "${FILES}"/nginx.conf

    emagicdocs

    option nginx_modules:perl\
        && emake -C objs/src/http/modules/perl install DESTDIR="${IMAGE}" INSTALLDIRS=vendor

    option chunk\
        && newdoc "${WORKBASE}/agentzh-chunkin-nginx-module-${MOD_CHUNKIN_SHA1}"/README README.chunkin
    option pam\
        && newdoc "${WORKBASE}"/ngx_http_auth_pam_module-1.1/README README.pam

    if option nginx_modules:push; then
        docinto ${MOD_PUSH_PNV}
        dodoc "${WORKBASE}"/${MOD_PUSH_PNV}/{changelog.txt,protocol.txt,README}
    fi

    if option nginx_modules:cache_purge; then
        docinto ${MOD_CACHE_PURGE_PNV}
        dodoc "${WORKBASE}"/${MOD_CACHE_PURGE_PNV}/{CHANGES,README}
    fi

    keepdir /var/log/${PN}
    install_systemd_files
}
