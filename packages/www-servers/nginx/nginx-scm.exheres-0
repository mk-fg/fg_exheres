# Copyright 2011-2012 Mike Kazantsev
# Copyright 2009 Timothy Redaelli <timothy@redaelli.eu>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'nginx-0.7.43.ebuild' and 'nginx-0.8.54.ebuild', which are:
#  Copyright 1999-20010 Gentoo Foundation

SCM_REPOSITORY="svn://svn.nginx.org/nginx"

require systemd-service scm-svn

SUMMARY="A small and fast HTTP server and mail proxy server."

HOMEPAGE="http://nginx.net/ http://sysoev.ru/nginx/"
DOWNLOADS="pam? ( http://web.iti.upv.es/~sto/nginx/ngx_http_auth_pam_module-1.1.tar.gz )"

LICENCES="GPL-2 pam? ( as-is )"
SLOT="0"
PLATFORMS="~amd64 ~x86"

MOD_HTTP_EXC="
    charset gzip ssi userid access auth_basic autoindex geo map split_clients
    referer rewrite proxy fastcgi uwsgi scgi memcached limit_zone limit_req
    empty_gif browser upstream_ip_hash"
MOD_HTTP_INC="
    realip addition xslt image_filter geoip sub dav flv
    gzip_static random_index secure_link degradation stub_status perl"
MOD_HTTP_EXT=""
MOD_MAIL="mail_imap mail_pop3 mail_smtp"

MYOPTIONS="
    aio asm cache debug pam
    nginx_modules: $MOD_HTTP_INC $MOD_HTTP_EXC $MOD_HTTP_EXT $MOD_MAIL
"

DEPENDENCIES="
    build+run:
        dev-libs/openssl
        dev-libs/pcre
        nginx_modules:geoip? ( net-libs/GeoIP )
        nginx_modules:gzip? ( sys-libs/zlib )
        nginx_modules:gzip_static? ( sys-libs/zlib )
        nginx_modules:image_filter? ( media-libs/gd )
        nginx_modules:perl? ( dev-lang/perl )
        nginx_modules:secure_link? ( dev-libs/openssl )
        nginx_modules:xslt? ( dev-libs/libxml2 dev-libs/libxslt )
"

BUGS_TO="mk.fraggod@gmail.com"
REMOTE_IDS="freshmeat:${PN}"
UPSTREAM_CHANGELOG="http://nginx.net/CHANGES"
UPSTREAM_DOCUMENTATION="http://wiki.nginx.org"


src_unpack() {
    scm_src_unpack
    option pam && unpack "ngx_http_auth_pam_module-1.1.tar.gz"

    edo mv "$WORK"{,.base}
    edo pushd "${WORK}.base"
    edo make -f misc/GNUmakefile release
    release=$(echo nginx-*.tar.gz)
    edo popd
    edo tar xf "${WORK}.base/${release}"
    edo mv "${release%.tar.gz}" "${PNV}"
}

src_prepare() {
    sed -i 's/ make/ \\$(MAKE)/' auto/lib/perl/make
}

src_configure() {
    local conf_params=(
        --prefix=/usr
        --with-cc-opt="-I${ROOT}usr/include"
        --with-ld-opt="-L${ROOT}usr/lib"
        --sbin-path=/usr/sbin/nginx
        --conf-path=/etc/${PN}/nginx.conf
        --pid-path=/run/${PN}.pid
        --lock-path=/run/lock/${PN}.lock
        --error-log-path=/var/log/${PN}/error_log
        --http-log-path=/var/log/${PN}/access_log
        --with-ipv6
        --with-pcre )

    # HTTP
    local http_enabled=
    for mod in $MOD_HTTP_EXC; do
        if option nginx_modules:${mod}
        then http_enabled=true
        else conf_params+=( --without-http_${mod}_module )
        fi
    done
    for mod in $MOD_HTTP_INC; do
        if option nginx_modules:${mod}; then
            http_enabled=true
            conf_params+=( --with-http_${mod}_module )
        fi
    done

    if [[ -n "$http_enabled" ]]
    then conf_params+=( --with-http_ssl_module )
    else conf_params+=( --without-http )
    fi

    option nginx_modules:fastcgi && conf_params+=( --with-http_realip_module )

    option cache || conf_params+=( --without-http-cache )
    option aio && conf_params+=( --with-file-aio )
    option debug && conf_params+=( --with-debug )
    option pam && conf_params+=(
        "--add-module=${WORKBASE}/ngx_http_auth_pam_module-1.1" )

    # MAIL
    local mail_enabled=
    for mod in $MOD_MAIL; do
        if option nginx_modules:${mod}
        then mail_enabled=true
        else conf_params+=( "--without-${mod}_module" )
        fi
    done
    [[ -n "$mail_enabled" ]] && conf_params+=( --with-mail --with-mail_ssl_module )

    option asm &&\
        conf_params+=( --with-md5-asm --with-sha1-asm --with-zlib-asm=pentiumpro )

    edo ./configure "${conf_params[@]}"
}

src_compile() {
    export LANG=C LC_ALL=C # http://bugs.gentoo.org/show_bug.cgi?id=286772
    emake CC="${CC}" LD="${CC}" LINK="${CC} ${LDFLAGS}" OTHERLDFLAGS="${LDFLAGS}"
}

src_install() {
    dosbin objs/nginx

    insinto /etc/nginx
    doins "${FILES}"/nginx.conf

    emagicdocs

    option nginx_modules:perl\
        && emake -C objs/src/http/modules/perl install DESTDIR="${IMAGE}" INSTALLDIRS=vendor
    option pam\
        && newdoc "${WORKBASE}"/ngx_http_auth_pam_module-1.1/README README.pam

    keepdir /var/log/${PN}
    install_systemd_files
}
