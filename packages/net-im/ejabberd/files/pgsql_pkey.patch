diff --git a/src/gen_storage_odbc.erl b/src/gen_storage_odbc.erl
index 9fd56b4..22382d3 100644
--- a/gen_storage_odbc.erl
+++ b/gen_storage_odbc.erl
@@ -167,7 +167,7 @@ create_table(#tabdef{name = Tab,
 	       %% last_activity key (text, text) with this error:
 	       %% #42000Specified key was too long; max key length is 1000bytes"
 	       %% Similarly for rosteritem and other tables, maybe also PgSQL.
-	       set -> [", PRIMARY KEY (", string:join(K, "(105), "), "(105))"];
+	       set -> [", PRIMARY KEY (", string:join(K, ", "), ")"];
 	       bag -> []
 	   end,
     case odbc_command(Host,
@@ -178,7 +178,7 @@ create_table(#tabdef{name = Tab,
 		bag ->
 		    KeyColumns = tabdef_column_names(TabDef, KeyName),
 		    Q = ["CREATE INDEX ", TabS, "_bag ON ",
-			 TabS, " (", string:join(KeyColumns, "(75), "), "(75))"],
+			 TabS, " (", string:join(KeyColumns, ", "), ")"],
 		    case odbc_command(Host, Q) of
 			ok ->
 			    {atomic, ok};
@@ -226,7 +226,7 @@ add_table_index(#tabdef{name = Tab, host = Host} = TabDef, Attribute) ->
     AttributeS = atom_to_list(Attribute),
     A = tabdef_column_names(TabDef, AttributeS),
     Q = ["CREATE INDEX ", TabS, $_, AttributeS,
-	 " ON ", TabS, " (", string:join(A, "(75), "), "(75))"],
+	 " ON ", TabS, " (", string:join(A, ", "), ")"],
     case odbc_command(Host, Q) of
 	ok ->
 	    {atomic, ok};
