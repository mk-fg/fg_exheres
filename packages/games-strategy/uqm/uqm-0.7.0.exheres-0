# Copyright 2013 Mike Kazantsev
# Distributed under the terms of the GNU General Public License v2

require multilib

SUMMARY="The Ur-Quan Masters: Port of Star Control 2"

HOMEPAGE="http://sc2.sourceforge.net/"
DOWNLOADS="mirror://sourceforge/sc2/${PNV}-source.tgz
    mirror://sourceforge/sc2/${PNV}-content.uqm
    music? ( mirror://sourceforge/sc2/${PNV}-3domusic.uqm )
    voice? ( mirror://sourceforge/sc2/${PNV}-voice.uqm )
    remix? ( mirror://sourceforge/sc2/${PN}-remix-disc1.uqm
        mirror://sourceforge/sc2/${PN}-remix-disc2.uqm
        mirror://sourceforge/sc2/${PN}-remix-disc3.uqm )
"

LICENCES="GPL-2"
SLOT="0"
PLATFORMS="~amd64 ~x86"
MYOPTIONS="
    cheat [[ description = [ 95% damage protection for lander cheat-patch ] ]]
    music [[ description = [ download and install music files (large) ] ]]
    opengl
    remix [[ description = [ download and install music remix files (large) ] ]]
    voice [[ description = [ download and install voice files (large) ] ]]
"

DEPENDENCIES="
    build:
        app-arch/unzip
    build+run:
        media-libs/libvorbis
        media-libs/jpeg:0
        media-libs/libpng
        media-libs/SDL
        media-libs/SDL_image
        media-libs/libogg
        media-libs/libvorbis
        media-libs/libmikmod
"

BUGS_TO="mk.fraggod@gmail.com"


GAMES_PREFIX=/usr
GAMES_DATADIR=/usr/share

src_unpack() {
    unpack "${PNV}-source.tgz"
}

src_prepare() {
    local myopengl

    option cheat && expatch -l "${FILES}/95_percent_lander_shield_cheat.patch"

    option opengl \
        && myopengl=opengl \
        || myopengl=pure

    edo cat <<-EOF > config.state
CHOICE_debug_VALUE='nodebug'
CHOICE_graphics_VALUE='${myopengl}'
CHOICE_sound_VALUE='mixsdl'
CHOICE_accel_VALUE='plainc'
INPUT_install_prefix_VALUE='${GAMES_PREFIX}'
INPUT_install_bindir_VALUE='\$prefix/bin'
INPUT_install_libdir_VALUE='\$prefix/lib'
INPUT_install_sharedir_VALUE='${GAMES_DATADIR}/'
EOF

    # Take out the read so we can be non-interactive.
    edo sed -i -e '/read CHOICE/d' build/unix/menu_functions
    # support the user's CFLAGS.
    edo sed -i -e "s/-O3/${CFLAGS}/" build/unix/build.config

    edo sed -i -e "s:@INSTALL_LIBDIR@:/usr/libexec/:g" build/unix/uqm-wrapper.in
}

src_compile() {
    MAKE_VERBOSE=1 edo ./build.sh uqm
}

src_install() {
    # Using the included install scripts seems quite painful.
    # This manual install is totally fragile but maybe they'll
    # use a sane build system for the next release.
    newbin uqm-wrapper uqm
    exeinto "/usr/libexec/${PN}"
    doexe uqm

    insinto "${GAMES_DATADIR}"/${PN}/content/packages
    doins "${FETCHEDDIR}"/${PNV}-content.uqm
    edo echo ${PNV} > "${IMAGE}${GAMES_DATADIR}"/${PN}/content/version

    insinto "${GAMES_DATADIR}"/${PN}/content/addons
    option music && doins "${FETCHEDDIR}"/${PNV}-3domusic.uqm
    option voice && doins "${FETCHEDDIR}"/${PNV}-voice.uqm

    if option remix; then
        insinto "${GAMES_DATADIR}"/${PN}/content/addons
        doins "${FETCHEDDIR}"/${PN}-remix-disc{1,2,3}.uqm
    fi

    dodoc AUTHORS ChangeLog Contributing README WhatsNew doc/users/manual.txt
    docinto devel
    dodoc -r doc/devel/*
}
